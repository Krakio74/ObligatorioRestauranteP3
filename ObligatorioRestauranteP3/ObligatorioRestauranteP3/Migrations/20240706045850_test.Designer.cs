// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObligatorioRestauranteP3.Models;

#nullable disable

namespace ObligatorioRestauranteP3.Migrations
{
    [DbContext(typeof(Op3v5Context))]
    [Migration("20240706045850_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MenuRestaurante", b =>
                {
                    b.Property<int>("IdMenu")
                        .HasColumnType("int");

                    b.Property<int>("IdRestaurante")
                        .HasColumnType("int");

                    b.HasKey("IdMenu", "IdRestaurante")
                        .HasName("PK__MenuRest__FFE24EAE75CC1FE9");

                    b.HasIndex("IdRestaurante");

                    b.ToTable("MenuRestaurante", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Puntaje")
                        .HasColumnType("int");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("test")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Cliente__3214EC273891B22C");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Clima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionClima")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeOnly?>("Fecha")
                        .HasColumnType("time");

                    b.Property<string>("Temperatura")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Clima__3214EC27FF2E80F8");

                    b.ToTable("Clima", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool?>("Anular")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Modificar")
                        .HasColumnType("bit")
                        .HasColumnName("modificar");

                    b.Property<int>("ResId")
                        .HasColumnType("int")
                        .HasColumnName("ResID");

                    b.HasKey("Id")
                        .HasName("PK__Empleado__3214EC27C74BB42B");

                    b.ToTable("Empleado", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.FotoRestaurante", b =>
                {
                    b.Property<int>("RestauranteId")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("RestauranteId")
                        .HasName("PK__FotoRest__AAF3667BA3052A49");

                    b.ToTable("FotoRestaurante", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombrePlato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Precio")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__Menu__3214EC27C1AF2A5D");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<int>("NumeroMesa")
                        .HasColumnType("int");

                    b.Property<int?>("Restauranteid")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Mesa__3214EC27097A673C");

                    b.HasIndex("Restauranteid");

                    b.HasIndex(new[] { "NumeroMesa", "Restauranteid" }, "chkMesaRestaurante")
                        .IsUnique()
                        .HasFilter("[Restauranteid] IS NOT NULL");

                    b.ToTable("Mesa", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("DescCliente")
                        .HasColumnType("numeric(20, 2)");

                    b.Property<decimal?>("DescClima")
                        .HasColumnType("numeric(20, 2)");

                    b.Property<decimal?>("DescTemperatura")
                        .HasColumnType("numeric(20, 2)");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("int");

                    b.Property<int?>("RestauranteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(20, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Orden__3214EC2758C59AAC");

                    b.HasIndex("ReservaId");

                    b.HasIndex("RestauranteId");

                    b.ToTable("Orden", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.OrdenDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__OrdenDet__3214EC276B6D0E31");

                    b.HasIndex("MenuId");

                    b.HasIndex("OrdenId");

                    b.ToTable("OrdenDetalle", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("numeric(14, 2)");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("int")
                        .HasColumnName("ReservaID");

                    b.HasKey("Id")
                        .HasName("PK__Pago__3214EC2774B61C1D");

                    b.HasIndex("ReservaId");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.PermisosUsuario", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("PageAccess")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<bool?>("AcessTable")
                        .HasColumnType("bit");

                    b.Property<bool?>("DeleteData")
                        .HasColumnType("bit");

                    b.Property<bool?>("EditData")
                        .HasColumnType("bit");

                    b.Property<bool?>("EditOwnData")
                        .HasColumnType("bit");

                    b.Property<bool?>("InsertData")
                        .HasColumnType("bit");

                    b.Property<bool?>("SeeList")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "PageAccess")
                        .HasName("PK__Permisos__C6516914A82265F6");

                    b.ToTable("PermisosUsuarios");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Clienteid")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("MesaId")
                        .HasColumnType("int");

                    b.Property<int?>("RestauranteId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Reserva__3214EC27991ABE55");

                    b.HasIndex("Clienteid");

                    b.HasIndex("MesaId");

                    b.HasIndex("RestauranteId");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Reseña", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("Puntaje")
                        .HasColumnType("int");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Reseña__3214EC27B3DC7B30");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ReservaId");

                    b.ToTable("Reseña", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Restaurante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<TimeOnly>("HoraApertura")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("HoraCierre")
                        .HasColumnType("time");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Restaura__3214EC27883AC825");

                    b.ToTable("Restaurante", (string)null);
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Usuario__3214EC27BD9EA1BF");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("MenuRestaurante", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Menu", null)
                        .WithMany()
                        .HasForeignKey("IdMenu")
                        .IsRequired()
                        .HasConstraintName("FkMenu");

                    b.HasOne("ObligatorioRestauranteP3.Models.Restaurante", null)
                        .WithMany()
                        .HasForeignKey("IdRestaurante")
                        .IsRequired()
                        .HasConstraintName("IdRestaurante");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Cliente", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Usuario", "IdNavigation")
                        .WithOne("Cliente")
                        .HasForeignKey("ObligatorioRestauranteP3.Models.Cliente", "Id")
                        .IsRequired()
                        .HasConstraintName("FkClienteID");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Empleado", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Usuario", "IdNavigation")
                        .WithOne("Empleado")
                        .HasForeignKey("ObligatorioRestauranteP3.Models.Empleado", "Id")
                        .IsRequired()
                        .HasConstraintName("FkEmpleadoID");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.FotoRestaurante", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Restaurante", "Restaurante")
                        .WithOne("FotoRestaurante")
                        .HasForeignKey("ObligatorioRestauranteP3.Models.FotoRestaurante", "RestauranteId")
                        .IsRequired()
                        .HasConstraintName("FK__FotoResta__Resta__44FF419A");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Mesa", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Restaurante", "Restaurante")
                        .WithMany("Mesas")
                        .HasForeignKey("Restauranteid")
                        .HasConstraintName("FkMesaRestaurante");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Orden", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Reserva", "Reserva")
                        .WithMany("Ordens")
                        .HasForeignKey("ReservaId")
                        .HasConstraintName("FkReservaIdOrden");

                    b.HasOne("ObligatorioRestauranteP3.Models.Restaurante", "Restaurante")
                        .WithMany("Ordens")
                        .HasForeignKey("RestauranteId")
                        .HasConstraintName("FkRestauranteIdOrdenDetalle");

                    b.Navigation("Reserva");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.OrdenDetalle", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Menu", "Menu")
                        .WithMany("OrdenDetalles")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FkMenuIdOrdenDetalle");

                    b.HasOne("ObligatorioRestauranteP3.Models.Orden", "Orden")
                        .WithMany("OrdenDetalles")
                        .HasForeignKey("OrdenId")
                        .HasConstraintName("FkOrdenIdOrdenDetalle");

                    b.Navigation("Menu");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Pago", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Reserva", "Reserva")
                        .WithMany("Pagos")
                        .HasForeignKey("ReservaId")
                        .HasConstraintName("FkReservaIdPago");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.PermisosUsuario", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Usuario", "User")
                        .WithMany("PermisosUsuarios")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__PermisosU__UserI__403A8C7D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Reserva", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("Clienteid")
                        .HasConstraintName("FkClienteIdReserva");

                    b.HasOne("ObligatorioRestauranteP3.Models.Mesa", "Mesa")
                        .WithMany("Reservas")
                        .HasForeignKey("MesaId")
                        .HasConstraintName("FkMesaIdReserva");

                    b.HasOne("ObligatorioRestauranteP3.Models.Restaurante", "Restaurante")
                        .WithMany("Reservas")
                        .HasForeignKey("RestauranteId")
                        .HasConstraintName("FkRestauranteIdReserva");

                    b.Navigation("Cliente");

                    b.Navigation("Mesa");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Reseña", b =>
                {
                    b.HasOne("ObligatorioRestauranteP3.Models.Cliente", "Cliente")
                        .WithMany("Reseñas")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FkClienteIdReseña");

                    b.HasOne("ObligatorioRestauranteP3.Models.Reserva", "Reserva")
                        .WithMany("Reseñas")
                        .HasForeignKey("ReservaId")
                        .HasConstraintName("FkReservaIdReseña");

                    b.Navigation("Cliente");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");

                    b.Navigation("Reseñas");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Menu", b =>
                {
                    b.Navigation("OrdenDetalles");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Mesa", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Orden", b =>
                {
                    b.Navigation("OrdenDetalles");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Reserva", b =>
                {
                    b.Navigation("Ordens");

                    b.Navigation("Pagos");

                    b.Navigation("Reseñas");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Restaurante", b =>
                {
                    b.Navigation("FotoRestaurante");

                    b.Navigation("Mesas");

                    b.Navigation("Ordens");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ObligatorioRestauranteP3.Models.Usuario", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("PermisosUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
